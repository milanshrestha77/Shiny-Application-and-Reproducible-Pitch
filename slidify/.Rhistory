mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarise(cran,avg_bytes=mean(size))
summarize(cran,avg_bytes=mean(size))
library(swirl)
swirl()
library(dplyr)
cran<- tbl_df(mydf)
rm("mydf")
cran
group_by()
?group_by()
?group_by
?group_by
_package<- group_by(cran,package)
by_package<- group_by(cran,package)
by_package
summarize(by_package,mean(size))
/N
?N
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count,probs = 0.99)
quantile(pack_sum$count,probs = 0.1)
quantile(pack_sum$count,probs = 0.01)
quantile(pack_sum$count,probs = 0.05)
pack_sum
filter(pack_sum,count>679)
quantile(pack_sum$count,probs = 0.05)
quantile(pack_sum$count,probs = 0.99)
filter(pack_sum,count>679)
top_counts<-filter(pack_sum,count>679)
top_counts
view(top_counts)
View(top_counts)
arrange(top_counts,desc(count))
top_counts_sorted<- arrange(top_counts,desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique,probs = 0.99)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique()))
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit
submit()
submit()
submit
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
swirl()
swirl()
swirl()
swirl()
library(swirl)
swirl()
students
?gather
gather(students,sex,count,-grade)
gather(students,sx,ct,-grade)
students2
gather(students2,sex_class,count,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class,into = c("sex","class"))
?gather
?separate
submit()
students3
?gather
submit()
?spread
submit()
reset()
submit()
extract_numeric("class5")
?mutate
submit()
students4
submit()
?unique
submit()
submit
submit()
passed
failed
mutate(passsed,status="passed")
mutate(passed,status="passed")
?mutate
mutate(passed,status="passed")
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="passed")
failed<-mutate(failed,status="failed")
packageVersion("dplyr")
?bind_rows
bind_rows(passed,failed)
sat
select(sat,-contains('total'))
?separate
submit()
?group_by
submit
submit()
swirl()
swirl()
library("swirl")
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package=lubridate)
this_day<-today()
this_day
year(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
now()
this_moment<- update(this_moment, hours = 17, minutes = 06, seconds = 55)
this_moment
now(tzone = ""America/New_York")
now(tzone = "America/New_York")
nyc<-now(tzone = "America/New_York")
nyc
depart<- nyc+days(2)
depart
update(depart,h=17,m=34)
update(depart,hours=17,minutes=34)
depart<-update(depart,hours=17,minutes=34)
depart
arrive<- nyc+hours(15)+minutes(50)
arrive<- depart+hours(15)+minutes(50)
?with_tz
with_tz(arrive,tzone = "'Asia/Hong_kong")
arrive<-with_tz(arrive,tzone = "Asia/Hong_kong")
with_tz(arrive,tzone = "Asia/Hong_kong")
with_tz(arrive, "Asia/Hong_Kong"
)
arrive<-with_tz(arrive, "Asia/Hong_Kong")
arrive()
arrive
last_time<- mdy("June 17, 2008",tz="Singapore")
last_time
new_interval(arrive,last_time)
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
swirl()
library(swirl)
swirl()
qplot(y=hwy,data = mpg,col=drv)
qplot(y=hwy,data = mpg,color=drv)
myhigh
qplot(drv,hwy,mpg,geom="boxplot")
qplot(split=drv,hwy,mpg,geom="boxplot")
qplot
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mgp,facets = .~drv)
qplot(displ,hwy,data=mpg,facets = .~drv)
qplot(hwy,data=mpg,facets = drv~.,binwidth=2)
exit
bye
bye()
swirl()
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv,"loess")
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv,method="loess")
ggplot(mpg,aes(displ,hwy))
ggplot(mpg,aes=c(displ,hwy))
ggplot(data=mpg,aes=c(displ,hwy))
g<-ggplot(data=mpg,aes=c(displ,hwy))
g<-ggplot(data=mpg,aes(displ,hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(facets = .~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(facets = .~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,aplha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=4,alpha=1/2)+geom_smooth(size=4,linttype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv),size=4,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) +
| geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme(base_family="Times")
g+geom_point(aes(color=drv))+theme_bw(base_family="Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g<- ggplot(data=testdat,aes(myx,myy))
g+geom_line()
g+geom_line()+ylim
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(data=mpg,aes=c(displ,hwy,color=factor(year)))
g<-ggplot(mpg,aes=c(displ,hwy,color=factor(year)))
g<-ggplot(mpg,aes=c(x=displ,y=hwy,color=factor(year)))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(formula(drv~cyl),margins=TRUE
)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
swirl()
swirl()
bye()
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=.4,col="red")
4
5
abline(h=.05,col="red")
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix,cm.colors(25))
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
cx
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,ycx,cy)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols(newClust))
points(x,y,pch=19,cex=2,col=cols[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
x
y
newClust
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
pionts(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers = 3)
kmobj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green",pch=3,cex=3,lwd=3))
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3))
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
kmeans()
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
View(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=FALSE)
source("addPatt.R",local=TRUE
)
heatmap(dataMatrix)
View(mat)
mat
svd(mat)
View(matu)
View(matv)
View(diag)
matu %*% diag %*% t(matv)
sacle(mat)
scale(mat)
svd(sacle(mat))
svd(scale(mat))
prcomp(sclae(mat))
prcomp(scale(mat))
View(svd1)
svd1$v[,]
svd1$v[,1]
svd1$d
View(constantMatrix)
head(constantMatrix
)
View(svd2)
svd2$d
svd2$v
svd2$d[,1:2]
svd2$V[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<- svd1$u[,1] %*% svd1$d[1]%*% t(svd1$v)
a1<- svd1$u[,1] %*% svd1$d[1]%*% t(svd1$v)
a1<- svd1$u[,1]
a1<- svd1$u[,1] %*% svd1$d[1]%*% t(svd1$v[,1])
a1<- (svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2<-
;
a2
a2<- svd1$u %*% svd1$d
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1-(2+1)/36
ddeck
deck
1/52
52
4/52
0
12/52
2/51
function (url, handle = new_handle())
swril()
swirl()
0.64
0.64
mypdf
integrate(mydf)
integrate(mydf,lower = 0,upper = 1.6)
integrate(mypdf,lower = 0,upper = 1.6)
0.32
2
info()
0.0512
o,32
0.32
1.414214
swirl()
swirl()
swirl()
exit
bye
swril()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
swirl()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
swirl
swirl()
mean(rnorm(1e+07, mean = 0.5, sd = sqrt(1/12)))
library(swirl)
swirl()
swirl()
swirl()
library(swirl)
swirl()
0.997*.985
99.7*.001
0.997*.001
0.985*.001
0.985*(1-.001)
(1-0.985)*(1-.001)
calculate theoritical mean.
---
title: Investigate the exponential distribution in R and compare it with the Central
Limit Theorem
author: "Milan Shrestha"
output: pdf_document
graphics: yes
---
## Overview
This data analysis presents investigation on Exponential distribution and Compare it to CLT. Here we will compare 40 exps over 1000 simulations.
## Simulations
```r
ECHO=TRUE
## set seed
set.seed(1277)
## set lamda
lambda = 0.2
## set exponential
exps = 40
```
Run Simulations
```r
sMeans = NULL
for (i in 1 : 1000) sMeans = c(sMeans, mean(rexp(exps, lambda)))
```
## Comparison of the sample variance with the theoretical distribution
#### Sample Mean
calculate sample mean
```r
mean(sMeans)
```
```
## [1] 5.046941
```
#### Theoretical Mean
calculate theoritical mean.
```r
lambda^-1
```
```
## [1] 5
```
#### Comparison
Difference between sample mean and Theoriticla mean
```r
abs(mean(sMeans)-lambda^-1)
```
```
## [1] 0.04694068
```
There is only slight variance noticed between sample mean and theoritical mean.
## Sample Variance versus Theoretical Variance
#### Sample Variance
Calculating variance from sample means.
```r
var(sMeans)
```
```
## [1] 0.6122632
```
#### Theoretical Variance
Calculating Theoretical Varianace
```r
(lambda * sqrt(exps))^-2
```
```
## [1] 0.625
```
#### Comparison
Difference between sample variance and theoretical variance.
```r
abs(var(sMeans)-(lambda * sqrt(exps))^-2)
```
```
## [1] 0.01273683
```
## Distribution
In order to demonstrate that the sample distribution of the 1000 sampled means is approximately normal we will plot the correspondent histogram  and overlay it with the density function from the theoretical sampling distribution.
```r
library(ggplot2)
data <- as.data.frame(sMeans)
ggplot(data, aes(x = sMeans)) +
geom_histogram(binwidth = 0.2, color = 'black', fill = 'white', aes(y = ..density..)) +
stat_function(fun=dnorm, arg=list(mean=lambda^-1,
sd=(lambda*sqrt(exps))^-1),
size=2) +
xlab('Sample mean') +
ylab('Density') +
ggtitle('Comparison of the sample distribution\n and the theoretical distribution')
```
![](expDistvsCLT_files/figure-latex/unnamed-chunk-9-1.pdf)
setwd("D:/Cousera/Data Science/Data-Product/Week4/Assignment/Course-project2/Shiny-Application-and-Reproducible-Pitch")
library(slidify)
library(knitr)
slidify("index.Rmd")
browseURL("index.html")
publish(title = 'shiny', 'index.html', host = 'rpubs')
find.package("RCurl")
.libPaths("D:/Program Files/R/R-3.3.0/library/RCurl")
publish(title = 'shiny', 'index.html', host = 'rpubs')
.libPaths("D:/Program Files/R/R-3.3.0/library/RCurl")
publish(title = 'shiny', 'index.html', host = 'rpubs')
.libPaths("D:/Program Files/R/R-3.3.0/library/RCurl")
publish(title = 'shiny', 'index.html', host = 'rpubs')
